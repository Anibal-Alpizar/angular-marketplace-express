// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  UserId            Int             @id @default(autoincrement())
  FullName          String?
  Identification    String
  PhoneNumber       String
  Email             String          @unique
  Password          String
  Proveedor         String?
  IsActive          Boolean
  Address           String
  VerificationCode  String
  VerificationToken String
  Roles             UserRole[]
  Addresses         Address[]
  Questions         Question[]
  Answers           Answer[]
  Evaluations       Evaluation[]
  PaymentMethod     PaymentMethod[]
  Purchase          Purchase[]
  Products          Product[]
}

model Role {
  RoleId   Int        @id
  RoleName String
  Users    UserRole[]
}

model UserRole {
  id     Int  @id @default(autoincrement())
  User   User @relation(fields: [UserId], references: [UserId])
  Role   Role @relation(fields: [RoleId], references: [RoleId])
  UserId Int
  RoleId Int

  @@unique([UserId, RoleId])
}

model PaymentMethod {
  PaymentMethodId Int        @id @default(autoincrement())
  UserId          Int
  PaymentType     String
  Provider        String?
  AccountNumber   String
  ExpirationMonth String
  ExpirationYear  String
  Cvc             String
  User            User       @relation(fields: [UserId], references: [UserId])
  Purchase        Purchase[]
}

model Address {
  AddressId    Int        @id @default(autoincrement())
  Province     String
  Canton       String
  District     String
  ExactAddress String
  PostalCode   String
  Phone        String
  UserId       Int
  User         User       @relation(fields: [UserId], references: [UserId])
  Purchase     Purchase[]
}

model Category {
  CategoryId   Int       @id
  CategoryName String
  Products     Product[]
}

model Product {
  ProductId    Int            @id @default(autoincrement())
  ProductName  String
  Description  String
  Price        Float
  Quantity     Int
  CategoryId   Int
  UserId       Int
  Status       String
  Rating       Int
  Category     Category       @relation(fields: [CategoryId], references: [CategoryId])
  User         User           @relation(fields: [UserId], references: [UserId])
  Photos       Photo[]
  Questions    Question[]
  PurchaseItem PurchaseItem[]
  Purchase     Purchase[]
}

model Photo {
  PhotoId   Int     @id @default(autoincrement())
  ProductId Int
  PhotoURL  String
  Product   Product @relation(fields: [ProductId], references: [ProductId])
}

model Question {
  QuestionId   Int      @id @default(autoincrement())
  ProductId    Int
  UserId       Int
  QuestionText String
  Product      Product  @relation(fields: [ProductId], references: [ProductId])
  User         User     @relation(fields: [UserId], references: [UserId])
  Answers      Answer[]
}

model Answer {
  AnswerId   Int      @id @default(autoincrement())
  QuestionId Int
  UserId     Int
  AnswerText String
  Question   Question @relation(fields: [QuestionId], references: [QuestionId])
  User       User     @relation(fields: [UserId], references: [UserId])
}

model Purchase {
  PurchaseId      Int            @id @default(autoincrement())
  UserId          Int
  PaymentMethodId Int
  AddressId       Int
  ProductId       Int
  Quantity        Int
  TotalAmount     Float
  TaxAmount       Float
  PurchaseDate    DateTime
  PurchaseStatus  String
  Subtotal        Float
  User            User           @relation(fields: [UserId], references: [UserId])
  Address         Address        @relation(fields: [AddressId], references: [AddressId])
  PaymentMethod   PaymentMethod  @relation(fields: [PaymentMethodId], references: [PaymentMethodId])
  Product         Product        @relation(fields: [ProductId], references: [ProductId])
  PurchaseItems   PurchaseItem[]
  Evaluations     Evaluation[]
}

model PurchaseItem {
  PurchaseItemId Int      @id @default(autoincrement())
  PurchaseId     Int
  ProductId      Int
  Quantity       Int
  Subtotal       Float
  PurchaseStatus String
  Purchase       Purchase @relation(fields: [PurchaseId], references: [PurchaseId])
  Product        Product  @relation(fields: [ProductId], references: [ProductId])
}

model Evaluation {
  EvaluationId Int      @id @default(autoincrement())
  UserId       Int
  Rating       Int
  Comment      String
  User         User     @relation(fields: [UserId], references: [UserId])
  Purchase     Purchase @relation(fields: [PurchaseId], references: [PurchaseId])
  PurchaseId   Int
}
